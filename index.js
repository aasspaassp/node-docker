import express from "express"
import { MongoClient } from "mongodb";
import { MONGO_USER, MONGO_PASSWORD, MONGO_IP, MONGO_PORT, REDIS_URL, REDIS_PORT, SESSION_SECRET } from "./config/config.js";
import { helloServer, getJane, getAllDoctors, createDoctor, login } from "./mongodb/controllers/doctorsController.js"
import { autoGenerateDoctor } from "./utils/randomString.js"
import { createClient } from "redis"
import RedisStore from "connect-redis"
import session from "express-session"
import cors from "cors"

const app = express()

//mongo db
const uri = `mongodb://${MONGO_USER}:${MONGO_PASSWORD}@${MONGO_IP}:${MONGO_PORT}?authSource=admin&retryWrites=true&writeConcern=majority`
const client = new MongoClient(uri);

// genera un objeto con todos los campos que satisfagan Doctor
let testDoctor = autoGenerateDoctor()

// redis

// initzialize client
let redisClient = createClient({
   url: `redis://${REDIS_URL}:${REDIS_PORT}`
})

redisClient.on('error', err => console.log('Redis Client Error', err));

await redisClient.connect();

app.enable("trust proxy")
app.use(cors())
app.use(session({
    store: new RedisStore({client: redisClient}),
    secret: SESSION_SECRET,
    cookie: {
        secure: false,
        resave: false, // required: force lightweight session keep alive (touch)
        saveUninitialized: false, // recommended: only save session when data exists
        httpOnly: true,
        maxAge: 300000,
    },
}))

//middleware
app.use(express.json());
app.use(express.urlencoded({ extended: true }));

//routes
app.get("/", () => helloServer(client).catch(console.dir))
app.get("/api/doctors", (req, res) => getAllDoctors(client, req, res))
app.post("/api/testDoctor", (req, res) => createDoctor(client, testDoctor, req, res).catch(console.dir))
app.post("/api/login/", (req, res) => login(req, res, client).catch(console.dir))

const port = process.env.PORT || 3000

app.listen(port, () => console.log(`listening on port ${port}`))

